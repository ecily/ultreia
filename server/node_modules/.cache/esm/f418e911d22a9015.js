let User;_d22‍.x([["register",()=>register]]);_d22‍.w("../models/user",[["default",["User"],function(v){User=v}]]);

//register function
       const register = async (req, res) => {
    //console.log(req.body)
    const { name, email, password } = req.body
    //validation
    if(!name) return res.status(400).send('name is required')
    if(!password || password.length <6) return 
        res.status(400).send('password is required and shold be min 6 chars')
    
    let userExist = await User.findOne({email: email}).exec()
    if(userExist) {
        return res.status(400).message('email already taken')
    }
    //physically register user in database
    const user = new User(req.body)
    try {
        await user.save()
        _d22‍.g.console.log('User created', user)
        return res.json({ ok: true })
    } catch(err) {
        _d22‍.g.console.log('creating user failes', err)
        return res.status(400).send('Error writing Register')
    }
}
